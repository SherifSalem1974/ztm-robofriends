{"version":3,"sources":["CardComponenet.js","CardList.js","index.js","robots.js"],"names":["CardComponenet","id","name","email","className","Card","style","width","Img","variant","alt","src","Body","Title","Text","CardList","robots","getUser","map","user","i","CardDeck","ReactDOM","render","username","document","getElementById"],"mappings":"4OAkBeA,EAdQ,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAC/B,OACI,qBAAKC,UAAU,qDAAf,SACI,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACI,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAI,gBAAgBC,IAAG,+BAA0BV,EAA1B,cAC/C,eAACI,EAAA,EAAKO,KAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,UAAaX,IACb,cAACG,EAAA,EAAKS,KAAN,UAAYX,aCKjBY,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAUD,EAAOE,KAAI,SAACC,EAAMC,GAC9B,OAAQ,cAAC,EAAD,CAAgBnB,GAAIe,EAAOI,GAAGnB,GAAIC,KAAMc,EAAOI,GAAGlB,KAAMC,MAAOa,EAAOI,GAAGjB,WAGrF,OACI,cAACkB,EAAA,EAAD,CAAUjB,UAAU,qDAApB,SACKa,KCFbK,IAASC,OACP,cAAC,WAAD,UACE,cAAC,EAAD,CAAUP,OCXQ,CACpB,CACEf,GAAI,EACJC,KAAM,gBACNsB,SAAU,OACVrB,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,eACNsB,SAAU,YACVrB,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,mBACNsB,SAAU,WACVrB,MAAO,sBAET,CACEF,GAAI,EACJC,KAAM,mBACNsB,SAAU,WACVrB,MAAO,6BAET,CACEF,GAAI,EACJC,KAAM,mBACNsB,SAAU,SACVrB,MAAO,4BAET,CACEF,GAAI,EACJC,KAAM,uBACNsB,SAAU,mBACVrB,MAAO,2BAET,CACEF,GAAI,EACJC,KAAM,kBACNsB,SAAU,eACVrB,MAAO,0BAET,CACEF,GAAI,EACJC,KAAM,2BACNsB,SAAU,gBACVrB,MAAO,wBAET,CACEF,GAAI,EACJC,KAAM,kBACNsB,SAAU,WACVrB,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNsB,SAAU,iBACVrB,MAAO,+BD9CTsB,SAASC,eAAe,W","file":"static/js/main.20dfe894.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CardComponenet.css';\r\nimport {Card} from \"react-bootstrap\";\r\n\r\nconst CardComponenet = ({id, name, email}) => {\r\n    return(\r\n        <div className=\"d-flex justify-content-center align-content-center\">\r\n            <Card style={{ width: '18rem' }} >\r\n                <Card.Img variant=\"top\" alt=\"profile_photo\" src={`https://robohash.org/${id}?200x200`}/>\r\n                <Card.Body>\r\n                    <Card.Title>{name}</Card.Title>\r\n                    <Card.Text>{email}</Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardComponenet;","import React from \"react\";\r\nimport { CardDeck } from 'react-bootstrap';\r\nimport CardComponenet from \"./CardComponenet\";\r\n\r\nconst CardList = ({ robots }) => {\r\n    const getUser = robots.map((user, i) => {\r\n        return  <CardComponenet id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n    });\r\n    \r\n    return(\r\n        <CardDeck className=\"d-flex justify-content-center align-content-center\">\r\n            {getUser}\r\n        </CardDeck>\r\n    );\r\n};\r\n\r\nexport default CardList;","import React, {Fragment} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport CardList from \"./CardList\";\r\nimport { robots } from \"./robots\";\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Fragment>\r\n    <CardList robots={robots}/>\r\n  </Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n"],"sourceRoot":""}